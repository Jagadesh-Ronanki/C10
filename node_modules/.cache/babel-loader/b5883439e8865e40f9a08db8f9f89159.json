{"ast":null,"code":"// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict';\n\nconst {\n  kHeadersList\n} = require('../core/symbols');\nconst {\n  kGuard\n} = require('./symbols');\nconst {\n  kEnumerableProperty\n} = require('../core/util');\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util');\nconst {\n  webidl\n} = require('./webidl');\nconst kHeadersMap = Symbol('headers map');\nconst kHeadersSortedMap = Symbol('headers map sorted');\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize(potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  return potentialValue.replace(/^[\\r\\n\\t ]+|[\\r\\n\\t ]+$/g, '');\n}\nfunction fill(headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (const header of object) {\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        });\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      headers.append(header[0], header[1]);\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    for (const [key, value] of Object.entries(object)) {\n      headers.append(key, value);\n    }\n  } else {\n    webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    });\n  }\n}\nclass HeadersList {\n  constructor(init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap]);\n      this[kHeadersSortedMap] = init[kHeadersSortedMap];\n    } else {\n      this[kHeadersMap] = new Map(init);\n      this[kHeadersSortedMap] = null;\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#header-list-contains\n  contains(name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase();\n    return this[kHeadersMap].has(name);\n  }\n  clear() {\n    this[kHeadersMap].clear();\n    this[kHeadersSortedMap] = null;\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-append\n  append(name, value) {\n    this[kHeadersSortedMap] = null;\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    name = name.toLowerCase();\n    const exists = this[kHeadersMap].get(name);\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      this[kHeadersMap].set(name, `${exists}, ${value}`);\n    } else {\n      this[kHeadersMap].set(name, `${value}`);\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-set\n  set(name, value) {\n    this[kHeadersSortedMap] = null;\n    name = name.toLowerCase();\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    return this[kHeadersMap].set(name, value);\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-delete\n  delete(name) {\n    this[kHeadersSortedMap] = null;\n    name = name.toLowerCase();\n    return this[kHeadersMap].delete(name);\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-get\n  get(name) {\n    name = name.toLowerCase();\n\n    // 1. If list does not contain name, then return null.\n    if (!this.contains(name)) {\n      return null;\n    }\n\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return this[kHeadersMap].get(name) ?? null;\n  }\n  has(name) {\n    name = name.toLowerCase();\n    return this[kHeadersMap].has(name);\n  }\n  keys() {\n    return this[kHeadersMap].keys();\n  }\n  values() {\n    return this[kHeadersMap].values();\n  }\n  entries() {\n    return this[kHeadersMap].entries();\n  }\n  [Symbol.iterator]() {\n    return this[kHeadersMap][Symbol.iterator]();\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  constructor() {\n    let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    this[kHeadersList] = new HeadersList();\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this[kGuard] = 'none';\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init);\n      fill(this, init);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return this.constructor.name;\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append(name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to execute 'append' on 'Headers': 2 arguments required, but only ${arguments.length} present.`);\n    }\n    name = webidl.converters.ByteString(name);\n    value = webidl.converters.ByteString(value);\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value);\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value: name,\n        type: 'header name'\n      });\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value,\n        type: 'header value'\n      });\n    }\n\n    // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if headers’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {\n      // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n      // TODO\n    }\n\n    // 6. Otherwise, if headers’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n\n    // 7. Append (name, value) to headers’s header list.\n    // 8. If headers’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from headers\n    return this[kHeadersList].append(name, value);\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'delete' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n    name = webidl.converters.ByteString(name);\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      });\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this[kHeadersList].contains(name)) {\n      return;\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    return this[kHeadersList].delete(name);\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'get' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n    name = webidl.converters.ByteString(name);\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      });\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this[kHeadersList].get(name);\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has(name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'has' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n    name = webidl.converters.ByteString(name);\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      });\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this[kHeadersList].contains(name);\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set(name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to execute 'set' on 'Headers': 2 arguments required, but only ${arguments.length} present.`);\n    }\n    name = webidl.converters.ByteString(name);\n    value = webidl.converters.ByteString(value);\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value);\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      });\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      });\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable');\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    return this[kHeadersList].set(name, value);\n  }\n  get [kHeadersSortedMap]() {\n    if (!this[kHeadersList][kHeadersSortedMap]) {\n      this[kHeadersList][kHeadersSortedMap] = new Map([...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1));\n    }\n    return this[kHeadersList][kHeadersSortedMap];\n  }\n  keys() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    return makeIterator(this[kHeadersSortedMap].keys(), 'Headers');\n  }\n  values() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    return makeIterator(this[kHeadersSortedMap].values(), 'Headers');\n  }\n  entries() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    return makeIterator(this[kHeadersSortedMap].entries(), 'Headers');\n  }\n\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach(callbackFn) {\n    let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis;\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    if (arguments.length < 1) {\n      throw new TypeError(`Failed to execute 'forEach' on 'Headers': 1 argument required, but only ${arguments.length} present.`);\n    }\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\");\n    }\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this]);\n    }\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation');\n    }\n    return this[kHeadersList];\n  }\n}\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries;\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty\n});\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V);\n    }\n    return webidl.converters['record<ByteString, ByteString>'](V);\n  }\n  webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  });\n};\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n};","map":{"version":3,"names":["kHeadersList","require","kGuard","kEnumerableProperty","makeIterator","isValidHeaderName","isValidHeaderValue","webidl","kHeadersMap","Symbol","kHeadersSortedMap","headerValueNormalize","potentialValue","replace","fill","headers","object","Array","isArray","header","length","errors","exception","message","append","key","value","Object","entries","conversionFailed","prefix","argument","types","HeadersList","constructor","init","Map","contains","name","toLowerCase","has","clear","exists","get","set","delete","keys","values","iterator","Headers","undefined","converters","HeadersInit","toStringTag","TypeError","arguments","ByteString","invalidArgument","type","sort","a","b","forEach","callbackFn","thisArg","globalThis","apply","for","prototype","defineProperties","V","util","Type","module","exports"],"sources":["/home/jagadeshronanki/projects/millow/node_modules/undici/lib/fetch/headers.js"],"sourcesContent":["// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst { kHeadersList } = require('../core/symbols')\nconst { kGuard } = require('./symbols')\nconst { kEnumerableProperty } = require('../core/util')\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util')\nconst { webidl } = require('./webidl')\n\nconst kHeadersMap = Symbol('headers map')\nconst kHeadersSortedMap = Symbol('headers map sorted')\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize (potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  return potentialValue.replace(\n    /^[\\r\\n\\t ]+|[\\r\\n\\t ]+$/g,\n    ''\n  )\n}\n\nfunction fill (headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (const header of object) {\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        })\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      headers.append(header[0], header[1])\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    for (const [key, value] of Object.entries(object)) {\n      headers.append(key, value)\n    }\n  } else {\n    webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    })\n  }\n}\n\nclass HeadersList {\n  constructor (init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap])\n      this[kHeadersSortedMap] = init[kHeadersSortedMap]\n    } else {\n      this[kHeadersMap] = new Map(init)\n      this[kHeadersSortedMap] = null\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#header-list-contains\n  contains (name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase()\n\n    return this[kHeadersMap].has(name)\n  }\n\n  clear () {\n    this[kHeadersMap].clear()\n    this[kHeadersSortedMap] = null\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-append\n  append (name, value) {\n    this[kHeadersSortedMap] = null\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    name = name.toLowerCase()\n    const exists = this[kHeadersMap].get(name)\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      this[kHeadersMap].set(name, `${exists}, ${value}`)\n    } else {\n      this[kHeadersMap].set(name, `${value}`)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-set\n  set (name, value) {\n    this[kHeadersSortedMap] = null\n    name = name.toLowerCase()\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    return this[kHeadersMap].set(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-delete\n  delete (name) {\n    this[kHeadersSortedMap] = null\n\n    name = name.toLowerCase()\n    return this[kHeadersMap].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-get\n  get (name) {\n    name = name.toLowerCase()\n\n    // 1. If list does not contain name, then return null.\n    if (!this.contains(name)) {\n      return null\n    }\n\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return this[kHeadersMap].get(name) ?? null\n  }\n\n  has (name) {\n    name = name.toLowerCase()\n    return this[kHeadersMap].has(name)\n  }\n\n  keys () {\n    return this[kHeadersMap].keys()\n  }\n\n  values () {\n    return this[kHeadersMap].values()\n  }\n\n  entries () {\n    return this[kHeadersMap].entries()\n  }\n\n  [Symbol.iterator] () {\n    return this[kHeadersMap][Symbol.iterator]()\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  constructor (init = undefined) {\n    this[kHeadersList] = new HeadersList()\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this[kGuard] = 'none'\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init)\n      fill(this, init)\n    }\n  }\n\n  get [Symbol.toStringTag] () {\n    return this.constructor.name\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append (name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        `Failed to execute 'append' on 'Headers': 2 arguments required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.append',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if headers’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n      // TODO\n    }\n\n    // 6. Otherwise, if headers’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n\n    // 7. Append (name, value) to headers’s header list.\n    // 8. If headers’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from headers\n    return this[kHeadersList].append(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'delete' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this[kHeadersList].contains(name)) {\n      return\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    return this[kHeadersList].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'get' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this[kHeadersList].get(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has (name) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'has' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this[kHeadersList].contains(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set (name, value) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 2) {\n      throw new TypeError(\n        `Failed to execute 'set' on 'Headers': 2 arguments required, but only ${arguments.length} present.`\n      )\n    }\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    return this[kHeadersList].set(name, value)\n  }\n\n  get [kHeadersSortedMap] () {\n    if (!this[kHeadersList][kHeadersSortedMap]) {\n      this[kHeadersList][kHeadersSortedMap] = new Map([...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1))\n    }\n    return this[kHeadersList][kHeadersSortedMap]\n  }\n\n  keys () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].keys(), 'Headers')\n  }\n\n  values () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].values(), 'Headers')\n  }\n\n  entries () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return makeIterator(this[kHeadersSortedMap].entries(), 'Headers')\n  }\n\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    if (arguments.length < 1) {\n      throw new TypeError(\n        `Failed to execute 'forEach' on 'Headers': 1 argument required, but only ${arguments.length} present.`\n      )\n    }\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    if (!(this instanceof Headers)) {\n      throw new TypeError('Illegal invocation')\n    }\n\n    return this[kHeadersList]\n  }\n}\n\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries\n\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty\n})\n\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V)\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V)\n  }\n\n  webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  })\n}\n\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}