{"ast":null,"code":"var _jsxFileName = \"/home/jagadeshronanki/projects/millow/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components';\nimport { Home, Sell } from './pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const network = await provider.getNetwork();\n    const realEstate = new ethers.Contract(config[network.chainId].realEstate.address, RealEstate, provider);\n    const totalSupply = await realEstate.totalSupply();\n    const homes = [];\n    for (var i = 1; i <= totalSupply; i++) {\n      const uri = await realEstate.tokenURI(i);\n      const response = await fetch(uri);\n      const metadata = await response.json();\n      homes.push(metadata);\n    }\n    setHomes(homes);\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider);\n    setEscrow(escrow);\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative sm:-8 p-4 bg-[#13131a] min-h-screen flex flex-row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 max-sm:w-full max-w-[1280px] mx-auto sm:pr-5\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: account,\n        setAccount: setAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sell\",\n          element: /*#__PURE__*/_jsxDEV(Sell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"86F8VZ8lfjh6tQB+p37fx1M0D7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","Navigation","Home","Sell","App","account","setAccount","useState","loadBlockchainData","provider","ethers","providers","Web3Provider","window","ethereum","network","getNetwork","realEstate","Contract","config","chainId","address","RealEstate","totalSupply","homes","i","uri","tokenURI","response","fetch","metadata","json","push","setHomes","escrow","Escrow","setEscrow","on","accounts","request","method","utils","getAddress","useEffect"],"sources":["/home/jagadeshronanki/projects/millow/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { Navigation } from './components';\nimport { Home, Sell } from './pages'; \n\nconst App = () => {\n  const [account, setAccount] = useState(null)\n  \n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const network = await provider.getNetwork()\n\n    const realEstate = new ethers.Contract(config[network.chainId].realEstate.address, RealEstate, provider)\n    const totalSupply = await realEstate.totalSupply()\n    const homes = []\n\n    for (var i = 1; i <= totalSupply; i++) {\n      const uri = await realEstate.tokenURI(i)\n      const response = await fetch(uri)\n      const metadata = await response.json()\n      homes.push(metadata)\n    }\n\n    setHomes(homes)\n\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider)\n    setEscrow(escrow)\n\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account);\n    })\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div className=\"relative sm:-8 p-4 bg-[#13131a] min-h-screen flex flex-row\">\n      <div className=\"flex-1 max-sm:w-full max-w-[1280px] mx-auto sm:pr-5\">\n        <Navigation account={account} setAccount={setAccount} />\n\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/sell\" element={<Sell />} />\n          {/* <Route path=\"/create-campaign\" element={<CreateCampaign />} />\n          <Route path=\"/campaign-details/:id\" element={<CampaignDetails />} /> */}\n        </Routes>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAEhD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,IAAI,EAAEC,IAAI,QAAQ,SAAS;AAAC;AAErC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMC,kBAAkB,GAAG,YAAY;IACrC,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,OAAO,GAAG,MAAMN,QAAQ,CAACO,UAAU,EAAE;IAE3C,MAAMC,UAAU,GAAG,IAAIP,MAAM,CAACQ,QAAQ,CAACC,MAAM,CAACJ,OAAO,CAACK,OAAO,CAAC,CAACH,UAAU,CAACI,OAAO,EAAEC,UAAU,EAAEb,QAAQ,CAAC;IACxG,MAAMc,WAAW,GAAG,MAAMN,UAAU,CAACM,WAAW,EAAE;IAClD,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACrC,MAAMC,GAAG,GAAG,MAAMT,UAAU,CAACU,QAAQ,CAACF,CAAC,CAAC;MACxC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACtCP,KAAK,CAACQ,IAAI,CAACF,QAAQ,CAAC;IACtB;IAEAG,QAAQ,CAACT,KAAK,CAAC;IAEf,MAAMU,MAAM,GAAG,IAAIxB,MAAM,CAACQ,QAAQ,CAACC,MAAM,CAACJ,OAAO,CAACK,OAAO,CAAC,CAACc,MAAM,CAACb,OAAO,EAAEc,MAAM,EAAE1B,QAAQ,CAAC;IAC5F2B,SAAS,CAACF,MAAM,CAAC;IAEjBrB,MAAM,CAACC,QAAQ,CAACuB,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAChD,MAAMC,QAAQ,GAAG,MAAMzB,MAAM,CAACC,QAAQ,CAACyB,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MACjF,MAAMnC,OAAO,GAAGK,MAAM,CAAC+B,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpDhC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAEDsC,SAAS,CAAC,MAAM;IACdnC,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,4DAA4D;IAAA,uBACzE;MAAK,SAAS,EAAC,qDAAqD;MAAA,wBAClE,QAAC,UAAU;QAAC,OAAO,EAAEH,OAAQ;QAAC,UAAU,EAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAExD,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAGlC;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAhDKF,GAAG;AAAA,KAAHA,GAAG;AAkDT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}