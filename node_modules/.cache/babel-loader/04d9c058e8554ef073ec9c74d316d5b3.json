{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHardhatVersion = exports.getPackageJson = exports.findClosestPackageJson = exports.getPackageRoot = exports.getPackageJsonPath = void 0;\nconst find_up_1 = __importDefault(require(\"find-up\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst path_1 = __importDefault(require(\"path\"));\nfunction getPackageJsonPath() {\n  return findClosestPackageJson(__filename);\n}\nexports.getPackageJsonPath = getPackageJsonPath;\nfunction getPackageRoot() {\n  const packageJsonPath = getPackageJsonPath();\n  return path_1.default.dirname(packageJsonPath);\n}\nexports.getPackageRoot = getPackageRoot;\nfunction findClosestPackageJson(file) {\n  return find_up_1.default.sync(\"package.json\", {\n    cwd: path_1.default.dirname(file)\n  });\n}\nexports.findClosestPackageJson = findClosestPackageJson;\nasync function getPackageJson() {\n  const root = getPackageRoot();\n  return fs_extra_1.default.readJSON(path_1.default.join(root, \"package.json\"));\n}\nexports.getPackageJson = getPackageJson;\nfunction getHardhatVersion() {\n  const packageJsonPath = findClosestPackageJson(__filename);\n  if (packageJsonPath === null) {\n    return null;\n  }\n  try {\n    const packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);\n    return packageJson.version;\n  } catch {\n    return null;\n  }\n}\nexports.getHardhatVersion = getHardhatVersion;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAEA,SAAgBA,kBAAkB;EAChC,OAAOC,sBAAsB,CAACC,UAAU,CAAE;AAC5C;AAFAC;AAIA,SAAgBC,cAAc;EAC5B,MAAMC,eAAe,GAAGL,kBAAkB,EAAE;EAE5C,OAAOM,cAAI,CAACC,OAAO,CAACF,eAAe,CAAC;AACtC;AAJAF;AAcA,SAAgBF,sBAAsB,CAACO,IAAY;EACjD,OAAOC,iBAAM,CAACC,IAAI,CAAC,cAAc,EAAE;IAAEC,GAAG,EAAEL,cAAI,CAACC,OAAO,CAACC,IAAI;EAAC,CAAE,CAAC;AACjE;AAFAL;AAIO,eAAeS,cAAc;EAClC,MAAMC,IAAI,GAAGT,cAAc,EAAE;EAC7B,OAAOU,kBAAO,CAACC,QAAQ,CAACT,cAAI,CAACU,IAAI,CAACH,IAAI,EAAE,cAAc,CAAC,CAAC;AAC1D;AAHAV;AAKA,SAAgBc,iBAAiB;EAC/B,MAAMZ,eAAe,GAAGJ,sBAAsB,CAACC,UAAU,CAAC;EAE1D,IAAIG,eAAe,KAAK,IAAI,EAAE;IAC5B,OAAO,IAAI;;EAGb,IAAI;IACF,MAAMa,WAAW,GAAGJ,kBAAO,CAACK,YAAY,CAACd,eAAe,CAAC;IACzD,OAAOa,WAAW,CAACE,OAAO;GAC3B,CAAC,MAAM;IACN,OAAO,IAAI;;AAEf;AAbAjB","names":["getPackageJsonPath","findClosestPackageJson","__filename","exports","getPackageRoot","packageJsonPath","path_1","dirname","file","find_up_1","sync","cwd","getPackageJson","root","fs_extra_1","readJSON","join","getHardhatVersion","packageJson","readJsonSync","version"],"sources":["/home/jagadeshronanki/projects/millow/node_modules/hardhat/src/internal/util/packageInfo.ts"],"sourcesContent":["import findup from \"find-up\";\nimport fsExtra from \"fs-extra\";\nimport path from \"path\";\n\nexport function getPackageJsonPath(): string {\n  return findClosestPackageJson(__filename)!;\n}\n\nexport function getPackageRoot(): string {\n  const packageJsonPath = getPackageJsonPath();\n\n  return path.dirname(packageJsonPath);\n}\n\nexport interface PackageJson {\n  name: string;\n  version: string;\n  engines: {\n    node: string;\n  };\n}\n\nexport function findClosestPackageJson(file: string): string | null {\n  return findup.sync(\"package.json\", { cwd: path.dirname(file) });\n}\n\nexport async function getPackageJson(): Promise<PackageJson> {\n  const root = getPackageRoot();\n  return fsExtra.readJSON(path.join(root, \"package.json\"));\n}\n\nexport function getHardhatVersion(): string | null {\n  const packageJsonPath = findClosestPackageJson(__filename);\n\n  if (packageJsonPath === null) {\n    return null;\n  }\n\n  try {\n    const packageJson = fsExtra.readJsonSync(packageJsonPath);\n    return packageJson.version;\n  } catch {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}